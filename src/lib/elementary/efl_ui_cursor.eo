interface Efl.Ui.Cursor ()
{
   [[An interface to define mouse cursors to use when hovering
     over UI widgets.

     The Elementary cursor is an internal smart object used to customize the
     mouse cursor displayed over objects (or widgets). In the most common
     scenario, the cursor decoration comes from the graphical engine Elementary
     is running on. Those engines may provide different decorations for cursors,
     and Elementary provides functions to choose them (think of X11 cursors, as
     an example).

     By default, Elementary searches cursors only from engine. There's also the
     possibility of, besides using engine provided cursors, also use the ones
     coming from Edje theme files. Both globally and per widget, Elementary
     makes it possible for one to make the cursors lookup to be held on engines
     only or on Elementary's theme file, too. To set cursor's hot spot, two data
     items should be added to cursor's theme: "hot_x" and "hot_y", that are the
     offset from upper-left corner of the cursor (coordinates 0,0).
   ]]
   legacy_prefix: elm_object;
   methods {
      @property cursor {
         [[The cursor to be shown when mouse is over the object

           This is the cursor that will be displayed when mouse is over the
           object. The object can have only one cursor set to it, so if
           @.cursor.set is called twice for an object, the previous set
           will be unset.

           If using X cursors, a definition of all the valid cursor names
           is listed on Elementary_Cursors.h. If an invalid name is set
           the default cursor will be used.
         ]]
         set {
            [[Sets or unsets the current cursor.

              If $cursor is $null this function will reset the cursor
              to the default one.
            ]]
         }
         get { [[Returns the current cursor name.]] }
         values {
            cursor: string @nullable; [[The cursor name, defined either
                                        by the display system or the theme.]]
         }
      }
      @property cursor_style {
         [[A different style for the cursor.

           This only makes sense if theme cursors are used.
           The cursor should be set with @.cursor.set first before
           setting its style with this property.
         ]]
         values {
            style: string; [[A specific style to use, eg. default,
                             transparent, ....]]
         }
      }
      @property cursor_theme_search_enabled {
         [[Whether the cursor may be looked in the theme or not.

           If $false, the cursor may only come from the render engine,
           i.e. from the display manager.
         ]]
         values {
            allow: bool(true); [[Whether to use theme cursors.]]
         }
      }
   }
}
